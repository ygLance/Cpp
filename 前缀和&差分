# 前缀和与差分
### [参考1](https://blog.csdn.net/chenchenchenhk/article/details/98073056) [参考2](https://blog.csdn.net/k_r_forever/article/details/81775899)

#### [例题](http://acm.hdu.edu.cn/showproblem.php?pid=1556)(HDU-1556)

## **1** 一维前缀和
	最简单的形式:
	每读一个数据求目前为止的和,
	此位的值是sum[i]-sum[i-1]
## **2** 差分数组
	对于本应不断修改的sum,
	先不动,用一个差分数组储存变动,
	最后用一次循环完成数据处理.

	在最后一次循环中,
	使用sum[i]=sum[i-1]+d[i],

	优点?
	(注意,i的差分会加在sum上,对其后所有sum都有影响)
	即把本需要O(n)的过程变成了O(1)

	因此,对l到r项的数值变化,
	在差分上表现为:
	d[l]...
	d[r+1]...(这样不会影响到第r+1,及其以后的项)

## **3** 二维前缀和
	考虑一个网格,
	我可以先写入每一个格子的值,
	在按行按列更新,
	过程中一个格子的值为此格子与[0,0]构成的矩形内元素的全部值,
	具体实现方法是,
	此点的前缀和为其上一位加其左一位,减去左上一位,加上此点的值
	即sum[i][j]=sum[i][j-1]+sum[i-1][j]-sum[i-1][j-1]+a[i][j],


	此时的差分数组影响范围是从此点到[N][N]的矩阵
	例子:
	
	for(int i=0;i<m;i++){//m是修改操作次数 
    	int x1,y1,x2,y2,p;
    	cin>>x1>>y1>>x2>>y2>>p;
    	b[x1][y1]+=p;b[x2+1][y2+1]+=p;
    	b[x2+1][y1]-=p;b[x1][y2+1]-=p;
	}

